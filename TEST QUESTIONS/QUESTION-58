class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
def sortedArrayToBST(nums):
    if not nums:
        return None    
    def convert(left, right):
        if left > right:
            return None
        mid = (left + right) // 2
        node = TreeNode(nums[mid])
        node.left = convert(left, mid - 1)
        node.right = convert(mid + 1, right)
        return node    
    return convert(0, len(nums) - 1)
nums = [-10, -3, 0, 5, 9]
root = sortedArrayToBST(nums)
def preOrder(node):
    if not node:
        return []
    return [node.val] + preOrder(node.left) + preOrder(node.right)
print(preOrder(root)) 
