class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def add_two_numbers(l1, l2):
    dummy = ListNode()
    current, carry = dummy, 0
    while l1 or l2 or carry:
        val1 = (l1.val if l1 else 0)
        val2 = (l2.val if l2 else 0)
        carry, out = divmod(val1 + val2 + carry, 10)
        current.next = ListNode(out)
        current = current.next
        l1 = (l1.next if l1 else None)
        l2 = (l2.next if l2 else None)
    return dummy.next
def to_linked_list(lst):
    prev = dummy = ListNode()
    for elem in lst:
        prev.next = ListNode(elem)
        prev = prev.next
    return dummy.next
def to_list(node):
    lst = []
    while node:
        lst.append(node.val)
        node = node.next
    return lst

l1 = to_linked_list([2, 4, 3])
l2 = to_linked_list([5, 6, 4])
result = add_two_numbers(l1, l2)
print(to_list(result))  # Output: [7, 0, 8]
